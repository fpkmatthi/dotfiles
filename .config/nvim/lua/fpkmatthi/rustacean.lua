-- vim.g.rustaceanvim = function()
--   return {
--     -- pass cmp’s capabilities to rust-analyzer
--     server = {
--       capabilities = require("cmp_nvim_lsp").default_capabilities(),
--       on_attach = function(_, bufnr)
--         local bufopts = { buffer = bufnr, silent = true }

--         -- Show hover + code actions via RustLsp
--         vim.keymap.set("n", "K",      function() vim.cmd.RustLsp({"hover","actions"}) end, bufopts)
--         vim.keymap.set("n", "<leader>ca", function() vim.cmd.RustLsp("codeAction") end, bufopts)

--         -- any other mappings you like…
--       end,
--       settings = {
--         ["rust-analyzer"] = {
--           cargo = { allFeatures = true },
--           checkOnSave = { command = "clippy" },
--         },
--       },
--     },
--     -- you can also tweak dap autoloading, crate graphs, etc here
--   }
-- end

-- -- vim.g.rustaceanvim = {
-- --     server = {
-- --       cmd = function()
-- -- 	local mason_registry = require('mason-registry')
-- -- 	if mason_registry.is_installed('rust-analyzer') then
-- -- 	  -- This may need to be tweaked depending on the operating system.
-- -- 	  local ra = mason_registry.get_package('rust-analyzer')
-- -- 	  local ra_filename = ra:get_receipt():get().links.bin['rust-analyzer']
-- -- 	  return { ('%s/%s'):format(ra:get_install_path(), ra_filename or 'rust-analyzer') }
-- -- 	else
-- -- 	  -- global installation
-- -- 	  return { 'rust-analyzer' }
-- -- 	end
-- --       end,
-- --     },
-- --   }
