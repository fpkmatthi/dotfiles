" Title: vimrc

so $HOME/.vim/plugins.vim
so $HOME/.vim/latex-shortcuts.vim

" Options {{{
set autochdir
set breakindent
set conceallevel=2
set cursorline
set encoding=utf-8
set expandtab
set foldmethod=marker
set hlsearch
set ignorecase
set incsearch
set laststatus=2
set lazyredraw
set linebreak
set list
set listchars=tab:▶▬
set mouse=
set noruler
set noshowmode
set nrformats-=octal
set number relativenumber
set scrolloff=5
set shiftwidth=4
set shortmess=F
set showbreak=↪\
set showcmd
set showmatch
set smartcase
set smarttab
set softtabstop=4
set splitbelow
set splitright
set t_Co=256
set timeoutlen=1000
set ttimeoutlen=0
set ttyfast
set undodir=~/.vim/undodir
set undofile
set viminfo+=n~/.vim/viminfo
set wildmenu
set wrap
syntax on
highlight LineNr ctermbg=None
highlight CursorLine ctermbg=None
highlight CursorLine cterm=underline

" }}}

" Augroup {{{
" }}}

" Mappings {{{
" Make handling vertical/linear Vim windows easier
"map <leader>w- <C-W>- " decrement height
"map <leader>w+ <C-W>+ " increment height
"map <leader>w] <C-W>_ " maximize height
"map <leader>w[ <C-W>= " equalize all windows

" Make splitting Vim windows easier
"map <leader>; <C-W>s
"map <leader>` <C-W>v

"autocmd Filetype markdown setlocal wrap linebreak nolist textwidth=0 wrapmargin=0 " http://vim.wikia.com/wiki/Word_wrap_without_line_breaks
"autocmd FileType sh,cucumber,ruby,yaml,zsh,vim setlocal shiftwidth=2 tabstop=2 expandtab


" specify syntax highlighting for specific files
"autocmd Bufread,BufNewFile *.spv set filetype=php
"autocmd Bufread,BufNewFile *.md set filetype=markdown " Vim interprets .md as 'modula2' otherwise, see :set filetype?

" Highlight words to avoid in tech writing
" http://css-tricks.com/words-avoid-educational-writing/
"highlight TechWordsToAvoid ctermbg=red ctermfg=white
"match TechWordsToAvoid /\cobviously\|basically\|simply\|of\scourse\|clearly\|just\|everyone\sknows\|however\|so,\|easy/
"autocmd BufWinEnter * match TechWordsToAvoid /\cobviously\|basically\|simply\|of\scourse\|clearly\|just\|everyone\sknows\|however,\|so,\|easy/
"autocmd InsertEnter * match TechWordsToAvoid /\cobviously\|basically\|simply\|of\scourse\|clearly\|just\|everyone\sknows\|however,\|so,\|easy/
"autocmd InsertLeave * match TechWordsToAvoid /\cobviously\|basically\|simply\|of\scourse\|clearly\|just\|everyone\sknows\|however,\|so,\|easy/
"autocmd BufWinLeave * call clearmatches()

" Remove highlighting after search
"map <leader>h :noih<cr>

" Reset spelling colours when reading a new buffer
" This works around an issue where the colorscheme is changed by .local.vimrc
"fun! SetSpellingColors()
 " highlight SpellBad cterm=bold ctermfg=white ctermbg=red
  "highlight SpellCap cterm=bold ctermfg=red ctermbg=white
"endfun
"autocmd BufWinEnter * call SetSpellingColors()
"autocmd BufNewFile * call SetSpellingColors()
"autocmd BufRead * call SetSpellingColors()
"autocmd InsertEnter * call SetSpellingColors()
"autocmd InsertLeave * call SetSpellingColors()

" Close all folds when opening a new buffer
"autocmd BufRead * setlocal foldmethod=marker
"autocmd BufRead * normal zM


" }}}
